{"version":3,"sources":["components/post-add-form/App.module.css","components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["module","exports","Header","liked","allPosts","className","SearchPanel","props","state","text","onValueChange","bind","event","target","value","this","setState","textSearch","type","placeholder","onChange","Component","StatusFilter","buttons","name","label","map","classesOptions","filter","Button","color","onClick","updateFiler","PostlistItem","onDelete","important","like","onToggleImportant","onToggleLike","classNames","PostList","posts","elements","item","obj","key","isEmpty","id","PostAddForm","onSubmit","preventDefault","addItem","style","bottomPanel","AppBlock","styled","div","colored","App","data","idMax","deleteItem","updateSearchItem","items","length","elem","indexOf","newFilter","index","findIndex","old","newItem","slice","visiblePosts","filterPost","searchItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c32702.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomPanel\":\"App_bottomPanel__2EI2_\"};","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst Header = ({liked, allPosts}) => {\r\n   return (\r\n        <div className=\"app-header d-flex\"> \r\n            <h1>Maria Zayashnikova</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n    }\r\n\r\n    onValueChange(event) {\r\n        let text = event.target.value;\r\n        this.setState({text: text});\r\n        this.props.textSearch(text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onValueChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default class StatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'Все' },\r\n            { name: 'like', label: 'Понравились' }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const active = this.props.filter === name;\r\n            const classesOptions = active ? 'info' : 'outline-info';\r\n\r\n            return (\r\n                <Button\r\n                    key={name}\r\n                    color={classesOptions}\r\n                    onClick={() => this.props.updateFiler(name)}\r\n                >\r\n                    {label}\r\n                </Button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './post-list-item.css';\r\n\r\nclass PostlistItem extends Component {\r\n    render() {\r\n        const { label, onDelete, important, like, onToggleImportant, onToggleLike } = this.props;\r\n\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) classNames += ' important';\r\n\r\n        if (like) classNames += ' like';\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span\r\n                    className='app-list-item-label'\r\n                    onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <button\r\n                        type='button'\r\n                        className='btn-star btn-sm'\r\n                        onClick={onToggleImportant}>\r\n                        <i className='fa fa-star'></i>\r\n                    </button>\r\n                    <button\r\n                        type='button'\r\n                        className='btn-trash btn-sm'\r\n                        onClick={onDelete}>\r\n                        <i className='fa fa-trash-o'></i>\r\n                    </button>\r\n                    <i className='fa fa-heart'></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostlistItem;","import React from 'react';\r\nimport PostlistItem from '../post-list-item/post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLike }) => {\r\n\r\n    function isEmpty(obj) {\r\n        for (let key in obj) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const elements = posts.map(item => {\r\n        if (typeof (item) === 'object' && isEmpty(item)) {\r\n\r\n            return (\r\n                <li key={item.id} className=\"list-group-item\">\r\n                    <PostlistItem\r\n                        label={item.label}\r\n                        important={item.important}\r\n                        like={item.like}\r\n                        onDelete={() => onDelete(item.id)}\r\n                        onToggleImportant={() => onToggleImportant(item.id)}\r\n                        onToggleLike={() => onToggleLike(item.id)}\r\n                    />\r\n                </li>\r\n            )\r\n        } else return null;\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, { Component } from 'react';\r\nimport style from './App.module.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event) {\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.addItem(this.state.text);\r\n        this.setState({ text: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className={style.bottomPanel}\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport StatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\nimport './app.css';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    color: ${props => props.colored ? 'red' : 'black'}\r\n`;\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: 'Я изучаю React', important: false, like: false, id: 1 },\r\n                { label: 'This is interesting', important: false, like: false, id: 2 },\r\n                { label: 'Но сложно...', important: false, like: false, id: 3 }\r\n            ],\r\n            textSearch: '',\r\n            filter: 'all'\r\n        }\r\n        this.idMax = 4;\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLike = this.onToggleLike.bind(this);\r\n        this.updateSearchItem = this.updateSearchItem.bind(this);\r\n        this.updateFiler = this.updateFiler.bind(this);\r\n    }\r\n\r\n    searchItem(items, textSearch) {\r\n        if (textSearch.length === 0) return items;\r\n\r\n        return items.filter(elem => {\r\n            return elem.label.indexOf(textSearch) > -1;\r\n        });\r\n    }\r\n\r\n    updateSearchItem(text) {\r\n        this.setState({ textSearch: text })\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(elem => elem.like);\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    updateFiler(newFilter) {\r\n        this.setState({ filter: newFilter });\r\n    }\r\n\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, important: !old.important };\r\n            let newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLike(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n            let newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(text) {\r\n        this.setState(({ data }) => {\r\n            let newItem = {\r\n                label: text,\r\n                important: false,\r\n                id: this.idMax++\r\n            }\r\n\r\n            let newArr = [...data, newItem];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(item => item.id === id);\r\n            let newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { data, textSearch, filter } = this.state;\r\n        let liked = data.filter(elem => elem.like).length;\r\n        let allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchItem(data, textSearch), filter);\r\n\r\n        return (\r\n            <AppBlock>\r\n                <Header\r\n                    liked={liked}\r\n                    allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel textSearch={this.updateSearchItem} />\r\n                    <StatusFilter\r\n                        filter={filter}\r\n                        updateFiler={this.updateFiler} />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={id => this.deleteItem(id)}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike} />\r\n                <PostAddForm addItem={this.addItem} />\r\n            </AppBlock>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/app/app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}